//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace XafNwindQuery.Module.BusinessObjects.Northwind
{
    public static class SprocHelper
    {
        public static DevExpress.Xpo.DB.SelectedData ExecCustOrderHist(Session session, string CustomerID)
        {
            return session.ExecuteSproc("CustOrderHist", new OperandValue(CustomerID));
        }
        public static System.Collections.Generic.ICollection<CustOrderHistResult> ExecCustOrderHistIntoObjects(Session session, string CustomerID)
        {
            return session.GetObjectsFromSproc<CustOrderHistResult>("CustOrderHist", new OperandValue(CustomerID));
        }
        public static XPDataView ExecCustOrderHistIntoDataView(Session session, string CustomerID)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("CustOrderHist", new OperandValue(CustomerID));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(CustOrderHistResult)), sprocData);
        }
        public static void ExecCustOrderHistIntoDataView(XPDataView dataView, Session session, string CustomerID)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("CustOrderHist", new OperandValue(CustomerID));
            dataView.PopulateProperties(session.GetClassInfo(typeof(CustOrderHistResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecCustOrdersDetail(Session session, int OrderID)
        {
            return session.ExecuteSproc("CustOrdersDetail", new OperandValue(OrderID));
        }
        public static System.Collections.Generic.ICollection<CustOrdersDetailResult> ExecCustOrdersDetailIntoObjects(Session session, int OrderID)
        {
            return session.GetObjectsFromSproc<CustOrdersDetailResult>("CustOrdersDetail", new OperandValue(OrderID));
        }
        public static XPDataView ExecCustOrdersDetailIntoDataView(Session session, int OrderID)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("CustOrdersDetail", new OperandValue(OrderID));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(CustOrdersDetailResult)), sprocData);
        }
        public static void ExecCustOrdersDetailIntoDataView(XPDataView dataView, Session session, int OrderID)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("CustOrdersDetail", new OperandValue(OrderID));
            dataView.PopulateProperties(session.GetClassInfo(typeof(CustOrdersDetailResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecCustOrdersOrders(Session session, string CustomerID)
        {
            return session.ExecuteSproc("CustOrdersOrders", new OperandValue(CustomerID));
        }
        public static System.Collections.Generic.ICollection<CustOrdersOrdersResult> ExecCustOrdersOrdersIntoObjects(Session session, string CustomerID)
        {
            return session.GetObjectsFromSproc<CustOrdersOrdersResult>("CustOrdersOrders", new OperandValue(CustomerID));
        }
        public static XPDataView ExecCustOrdersOrdersIntoDataView(Session session, string CustomerID)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("CustOrdersOrders", new OperandValue(CustomerID));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(CustOrdersOrdersResult)), sprocData);
        }
        public static void ExecCustOrdersOrdersIntoDataView(XPDataView dataView, Session session, string CustomerID)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("CustOrdersOrders", new OperandValue(CustomerID));
            dataView.PopulateProperties(session.GetClassInfo(typeof(CustOrdersOrdersResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecEmployeeSalesbyCountry(Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            return session.ExecuteSproc("Employee Sales by Country", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
        }
        public static System.Collections.Generic.ICollection<EmployeeSalesbyCountryResult> ExecEmployeeSalesbyCountryIntoObjects(Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            return session.GetObjectsFromSproc<EmployeeSalesbyCountryResult>("Employee Sales by Country", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
        }
        public static XPDataView ExecEmployeeSalesbyCountryIntoDataView(Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("Employee Sales by Country", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(EmployeeSalesbyCountryResult)), sprocData);
        }
        public static void ExecEmployeeSalesbyCountryIntoDataView(XPDataView dataView, Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("Employee Sales by Country", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
            dataView.PopulateProperties(session.GetClassInfo(typeof(EmployeeSalesbyCountryResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecSalesbyYear(Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            return session.ExecuteSproc("Sales by Year", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
        }
        public static System.Collections.Generic.ICollection<SalesbyYearResult> ExecSalesbyYearIntoObjects(Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            return session.GetObjectsFromSproc<SalesbyYearResult>("Sales by Year", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
        }
        public static XPDataView ExecSalesbyYearIntoDataView(Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("Sales by Year", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(SalesbyYearResult)), sprocData);
        }
        public static void ExecSalesbyYearIntoDataView(XPDataView dataView, Session session, DateTime Beginning_Date, DateTime Ending_Date)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("Sales by Year", new OperandValue(Beginning_Date), new OperandValue(Ending_Date));
            dataView.PopulateProperties(session.GetClassInfo(typeof(SalesbyYearResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecSalesByCategory1(Session session, string CategoryName, string OrdYear)
        {
            return session.ExecuteSproc("SalesByCategory", new OperandValue(CategoryName), new OperandValue(OrdYear));
        }
        public static System.Collections.Generic.ICollection<SalesByCategoryResult> ExecSalesByCategory1IntoObjects(Session session, string CategoryName, string OrdYear)
        {
            return session.GetObjectsFromSproc<SalesByCategoryResult>("SalesByCategory", new OperandValue(CategoryName), new OperandValue(OrdYear));
        }
        public static XPDataView ExecSalesByCategory1IntoDataView(Session session, string CategoryName, string OrdYear)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("SalesByCategory", new OperandValue(CategoryName), new OperandValue(OrdYear));
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(SalesByCategoryResult)), sprocData);
        }
        public static void ExecSalesByCategory1IntoDataView(XPDataView dataView, Session session, string CategoryName, string OrdYear)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("SalesByCategory", new OperandValue(CategoryName), new OperandValue(OrdYear));
            dataView.PopulateProperties(session.GetClassInfo(typeof(SalesByCategoryResult)));
            dataView.LoadData(sprocData);
        }
        public static DevExpress.Xpo.DB.SelectedData ExecTenMostExpensiveProducts(Session session)
        {
            return session.ExecuteSproc("Ten Most Expensive Products");
        }
        public static System.Collections.Generic.ICollection<TenMostExpensiveProductsResult> ExecTenMostExpensiveProductsIntoObjects(Session session)
        {
            return session.GetObjectsFromSproc<TenMostExpensiveProductsResult>("Ten Most Expensive Products");
        }
        public static XPDataView ExecTenMostExpensiveProductsIntoDataView(Session session)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("Ten Most Expensive Products");
            return new XPDataView(session.Dictionary, session.GetClassInfo(typeof(TenMostExpensiveProductsResult)), sprocData);
        }
        public static void ExecTenMostExpensiveProductsIntoDataView(XPDataView dataView, Session session)
        {
            DevExpress.Xpo.DB.SelectedData sprocData = session.ExecuteSproc("Ten Most Expensive Products");
            dataView.PopulateProperties(session.GetClassInfo(typeof(TenMostExpensiveProductsResult)));
            dataView.LoadData(sprocData);
        }
    }
}
